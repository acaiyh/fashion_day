<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fashion.uaa.dao.UserDao">
    <resultMap  id="BaseUserMap" type="com.fashion.uaa.entity.UserDO">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="INTEGER"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <collection property="roles" column="userId=id" select="getRoleByUserId"/>
    </resultMap>

    <resultMap id="BaseRoleMap" type="com.fashion.uaa.entity.RoleDO">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <collection property="permissions" column="roleId=id"  ofType="com.fashion.uaa.entity.PermissionDO" select="getPermissionByRoleId"/>
    </resultMap>

    <resultMap id="BasePermissionMap" type="com.fashion.uaa.entity.PermissionDO">
        <result column="id" property="id" jdbcType="VARCHAR"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="loadUserByUsername" resultMap="BaseUserMap">
        select
            id, username, password, age, gender
        from t_user
        where username = #{username}
    </select>

    <select id="getRoleByUserId" resultMap="BaseRoleMap">
        select id,role_name,description,status from t_role where id in (
            select role_id from t_user_role where user_id = #{userId}
        )
    </select>

    <select id="getPermissionByRoleId" resultMap="BasePermissionMap">
        select id,code,description,url from t_permission where id in(
            select distinct permission_id from t_role_permission where role_id = #{roleId}
        )
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into t_user(id,username,password,gender,age)
        values (#{id},#{username},#{password},#{gender},#{age})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update t_user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                name = #{password},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="age != null">
                age = #{age}
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from t_user where id = #{id}
    </delete>

</mapper>